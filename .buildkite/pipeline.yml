steps:
  # Build the image in a single place for all parallel steps to leverage the same image.
  # - name: ':docker: :package: unit'
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       build: baseui
  #       image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
  #   agents:
  #     queue: builders
  # - name: ':docker: :package: docs'
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       build:
  #         - docs-site
  #         - docs-site-server
  #         - docs-site-healthy
  #       image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
  #   agents:
  #     queue: builders
  - name: ':docker: :package: e2e'
    plugins:
      'docker-compose#v3.0.3':
        build:
          - e2e-test
          - e2e-server
          - e2e-server-healthy
        image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
    agents:
      queue: builders
  # Wait until all images are built.
  # This way we can download the built image from a registry instead of building each for each test task.
  - wait
  # All of the commands after the wait are run in parallel.
  - name: ':vrt:'
    command: yarn add puppeteer && yarn vrt
    plugins:
      'docker-compose#v3.0.3':
        run: e2e-test
        pull:
          - e2e-server
          - e2e-server-healthy
    agents:
      queue: builders
  # - name: ':validate-examples:'
  #   command: yarn validate:examples
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':typescript:'
  #   command: yarn tsc
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':eslint:'
  #   command: yarn lint
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':flowtype:'
  #   command: yarn flow check
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':jest:'
  #   command: yarn unit-test
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':screener:'
  #   command: yarn remove screener-storybook && yarn add screener-storybook && yarn storybook:screener:ci
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':fossa:'
  #   command: 'curl https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash && fossa'
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':deploy:'
  #   command: './deploy.sh'
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':guard-component-sizes:'
  #   command: './scripts/component-sizes.js'
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: baseui
  #   agents:
  #     queue: workers
  # - name: ':documentation-site-link-checker:'
  #   command: yarn blc http://localhost:8081 -ro --exclude components/avatar --exclude github.com
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: docs-site
  #       pull:
  #         - docs-site-server
  #         - docs-site-healthy
  #   agents:
  #     queue: builders
  # - name: ':puppeteer:'
  #   # we have to install puppeteer here to trigger the install.js script
  #   # and also to make sure we do not add this to the released build artifact
  #   command: yarn add puppeteer && yarn e2e:test:ci
  #   plugins:
  #     'docker-compose#v3.0.3':
  #       run: e2e-test
  #       pull:
  #         - e2e-server
  #         - e2e-server-healthy
  #   agents:
  #     queue: builders
